{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.29.2",
    "schemaVersion": 1009,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@thematic/color!",
  "docComment": "",
  "name": "@thematic/color",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@thematic/color!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@thematic/color!Color:class",
          "docComment": "/**\n * This class represents an instance of a color. You create it by passing in a standard CSS-compatible string and an optional alpha value. Note that some CSS color formats can include alpha, we do this because SVG colors allow separate specification of color and alpha.\n *\n * This class also contains various accessors that transform the color output as noted. Note that the naming of these intentionally matches the string values on the ColorSpace enum.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Color "
            }
          ],
          "releaseTag": "Public",
          "name": "Color",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@thematic/color!Color:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Color` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(css: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", alpha?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "css",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "alpha",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@thematic/color!Color#css:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "css(alpha?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "alpha",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "css"
            },
            {
              "kind": "Method",
              "canonicalReference": "@thematic/color!Color#hex:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hex(alpha?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "alpha",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "hex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@thematic/color!Color#hsl:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hsl(): "
                },
                {
                  "kind": "Reference",
                  "text": "Hsl",
                  "canonicalReference": "@thematic/color!Hsl:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "hsl"
            },
            {
              "kind": "Method",
              "canonicalReference": "@thematic/color!Color#hsluv:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hsluv(): "
                },
                {
                  "kind": "Reference",
                  "text": "HslVector",
                  "canonicalReference": "@thematic/color!HslVector:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "hsluv"
            },
            {
              "kind": "Property",
              "canonicalReference": "@thematic/color!Color#raw:member",
              "docComment": "/**\n * Direct passthrough of string used to create the color, to avoid any transform.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get raw(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "raw",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@thematic/color!Color#rgba:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rgba(alpha?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Rgba",
                  "canonicalReference": "@thematic/color!Rgba:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "alpha",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "rgba"
            },
            {
              "kind": "Method",
              "canonicalReference": "@thematic/color!Color#rgbaint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rgbaint(alpha?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "alpha",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "rgbaint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@thematic/color!Color#rgbav:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rgbav(alpha?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RGBAV",
                  "canonicalReference": "@thematic/color!RGBAV:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "alpha",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "rgbav"
            },
            {
              "kind": "Method",
              "canonicalReference": "@thematic/color!Color#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!colorBlindness:function(1)",
          "docComment": "/**\n * Returns a copy of a Thematic Scheme with color blindness simulation applied.\n *\n * @param scheme - the color scheme\n *\n * @param mode - the colorblindness mode\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function colorBlindness(scheme: "
            },
            {
              "kind": "Reference",
              "text": "Scheme",
              "canonicalReference": "@thematic/color!Scheme:interface"
            },
            {
              "kind": "Content",
              "text": ", mode?: "
            },
            {
              "kind": "Reference",
              "text": "ColorBlindnessMode",
              "canonicalReference": "@thematic/color!ColorBlindnessMode:enum"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Scheme",
              "canonicalReference": "@thematic/color!Scheme:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "scheme",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "mode",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "colorBlindness"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!colorBlindnessInfo:function(1)",
          "docComment": "/**\n * Returns the indicence rates and description of a given colorblindess mode.\n *\n * @param mode - the colorblindness mode\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function colorBlindnessInfo(mode: "
            },
            {
              "kind": "Reference",
              "text": "ColorBlindnessMode",
              "canonicalReference": "@thematic/color!ColorBlindnessMode:enum"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ColorBlindnessMeta",
              "canonicalReference": "@thematic/color!ColorBlindnessMeta:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "mode",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "colorBlindnessInfo"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@thematic/color!ColorBlindnessMeta:interface",
          "docComment": "/**\n * Interface for meta container about color blindness. Note that incidence is the reported number for males, as female color blindness is very rare in comparison (overall 1 in 12 males, 1 in 200 females)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ColorBlindnessMeta "
            }
          ],
          "releaseTag": "Public",
          "name": "ColorBlindnessMeta",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!ColorBlindnessMeta#description:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!ColorBlindnessMeta#incidence:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "incidence: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "incidence",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@thematic/color!ColorBlindnessMode:enum",
          "docComment": "/**\n * This is an enumeration of the major known forms of color blindness. They are ordered by how common they are in males of Northern European descent (by far the most affected) According to https://en.wikipedia.org/wiki/Color_blindness\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ColorBlindnessMode "
            }
          ],
          "releaseTag": "Public",
          "name": "ColorBlindnessMode",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorBlindnessMode.Achromatopsia:member",
              "docComment": "/**\n * No color vision at all, very rare\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Achromatopsia = "
                },
                {
                  "kind": "Content",
                  "text": "\"achromatopsia\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Achromatopsia"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorBlindnessMode.Deuteranomaly:member",
              "docComment": "/**\n * Red/green, 6%, 0.4% females\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Deuteranomaly = "
                },
                {
                  "kind": "Content",
                  "text": "\"deuteranomaly\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Deuteranomaly"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorBlindnessMode.Deuteranopia:member",
              "docComment": "/**\n * Red/green, 1% males\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Deuteranopia = "
                },
                {
                  "kind": "Content",
                  "text": "\"deuteranopia\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Deuteranopia"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorBlindnessMode.None:member",
              "docComment": "/**\n * No colorblindness, ~92%\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "None = "
                },
                {
                  "kind": "Content",
                  "text": "\"none\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "None"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorBlindnessMode.Protanomaly:member",
              "docComment": "/**\n * Red/green, 1% males, .01% females\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Protanomaly = "
                },
                {
                  "kind": "Content",
                  "text": "\"protanomaly\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Protanomaly"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorBlindnessMode.Protanopia:member",
              "docComment": "/**\n * Red/green, 1% females\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Protanopia = "
                },
                {
                  "kind": "Content",
                  "text": "\"protanopia\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Protanopia"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorBlindnessMode.Tritanomaly:member",
              "docComment": "/**\n * Blue/yellow, .01% males and females\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Tritanomaly = "
                },
                {
                  "kind": "Content",
                  "text": "\"tritanomaly\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Tritanomaly"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorBlindnessMode.Tritanopia:member",
              "docComment": "/**\n * Blue/yellow, < 1% males and females\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Tritanopia = "
                },
                {
                  "kind": "Content",
                  "text": "\"tritanopia\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Tritanopia"
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@thematic/color!ColorSpace:enum",
          "docComment": "/**\n * Various options for color transforms and representations\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ColorSpace "
            }
          ],
          "releaseTag": "Public",
          "name": "ColorSpace",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorSpace.CSS:member",
              "docComment": "/**\n * Encode the color using any CSS-compatible color string. The default due to its wide applicability, and the format colors use in theme JSON. https://www.w3.org/TR/css-color-3/#colorunits\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CSS = "
                },
                {
                  "kind": "Content",
                  "text": "\"css\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CSS"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorSpace.HEX:member",
              "docComment": "/**\n * Encode as a standard hexadecimal color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "HEX = "
                },
                {
                  "kind": "Content",
                  "text": "\"hex\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "HEX"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorSpace.HSL:member",
              "docComment": "/**\n * HSL color space, { h, s, l }.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "HSL = "
                },
                {
                  "kind": "Content",
                  "text": "\"hsl\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "HSL"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorSpace.HSLUV:member",
              "docComment": "/**\n * HSLuv, which is a perceptually balanced space. [h, s, l]. https://www.hsluv.org/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "HSLUV = "
                },
                {
                  "kind": "Content",
                  "text": "\"hsluv\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "HSLUV"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorSpace.RGB:member",
              "docComment": "/**\n * Encode as an object with r, g, b properies, scaled 0-255 each.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RGB = "
                },
                {
                  "kind": "Content",
                  "text": "\"rgb\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "RGB"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorSpace.RGBA:member",
              "docComment": "/**\n * Encode as an object with r, g, b properies, scaled 0-255 each, along with an alpha prop scaled 0-1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RGBA = "
                },
                {
                  "kind": "Content",
                  "text": "\"rgba\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "RGBA"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorSpace.RGBA_NUMBER:member",
              "docComment": "/**\n * This is raw JavaScript number representing the RGBA color. It is calculated by bitshifting R, G, B, and A values into a 32-bit space. (i.e., r, g \\<\\< 8, b \\<\\< 16, a \\<\\< 24)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RGBA_NUMBER = "
                },
                {
                  "kind": "Content",
                  "text": "\"rgbaint\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "RGBA_NUMBER"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@thematic/color!ColorSpace.RGBA_VECTOR:member",
              "docComment": "/**\n * Encode the color using a vector of floats R, G, B, and A. Range of each is 0 to 1. Color \"none\" will be represented as an empty array. https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RGBA_VECTOR = "
                },
                {
                  "kind": "Content",
                  "text": "\"rgbav\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "RGBA_VECTOR"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!contrast:function(1)",
          "docComment": "/**\n * Compute the contrast between a foreground and background color\n *\n * @param foreground - the foreground CSS string\n *\n * @param background - the background CSS string\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function contrast(foreground: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", background: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "foreground",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "background",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "contrast"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!css2css:function(1)",
          "docComment": "/**\n * Seems redundant...but we spec opacity separate, so this ensures SVG fill or stroke opacity can be folded in as the alpha channel.\n *\n * @param css - the css color hex string\n *\n * @param alpha - the alpha value to use [0-1]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css2css(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", alpha?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "alpha",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "css2css"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!css2hex:function(1)",
          "docComment": "/**\n * Returns a standard hex color code. Note that we handle 'none' as 'none' here because it is used frequently to indicate empty fills and strokes in svg, even though it is not a valid hex code. Note: if you are using this for a css color, use css2css as it will return valid 'transparent' for our empty 'none'. Also note that if alpha is passed, chroma-js will create an 8-letter hex string.\n *\n * @param css - the css color hex string\n *\n * @param alpha - the alpha value to use [0-1]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css2hex(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", alpha?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "alpha",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "css2hex"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!css2hsl:function(1)",
          "docComment": "/**\n * Convert a standard CSS color to an \\{ h, s, l \\} object.\n *\n * @param css - the css color hex string\n *\n * @param alpha - the alpha value to use [0-1]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css2hsl(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", _alpha?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Hsl",
              "canonicalReference": "@thematic/color!Hsl:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "_alpha",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "css2hsl"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!css2hsluv:function(1)",
          "docComment": "/**\n * Convert a standard CSS-compatible string to [h, s, l] array\n *\n * @param css - the css color hex string\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css2hsluv(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HslVector",
              "canonicalReference": "@thematic/color!HslVector:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "css2hsluv"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!css2hsv:function(1)",
          "docComment": "/**\n * Convert a standard CSS color to an \\{ h, s, v \\} object.\n *\n * @param css - the css color hex string\n *\n * @param alpha - the alpha value to use [0-1]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css2hsv(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", _alpha?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Hsv",
              "canonicalReference": "@thematic/color!Hsv:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "_alpha",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "css2hsv"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!css2lch:function(1)",
          "docComment": "/**\n * Convert a standard CSS-compatible string to [l, c, h] array\n *\n * @param css - the css color hex string\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css2lch(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HslVector",
              "canonicalReference": "@thematic/color!HslVector:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "css2lch"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!css2rgb:function(1)",
          "docComment": "/**\n * Converts a standard CSS color to an \\{r, g, b\\} object\n *\n * @param css - the css color hex string\n *\n * @param alpha - Included for compatibility with all of the other transformers, but it will be omitted from the returned value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css2rgb(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", _alpha?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Rgb",
              "canonicalReference": "@thematic/color!Rgb:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "_alpha",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "css2rgb"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!css2rgba:function(1)",
          "docComment": "/**\n * Converts a standard CSS color to an \\{ r, g, b, a \\} object.\n *\n * @param css - the css color hex string\n *\n * @param alpha - the alpa value to use\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css2rgba(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", alpha?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Rgba",
              "canonicalReference": "@thematic/color!Rgba:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "alpha",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "css2rgba"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!css2rgbaint:function(1)",
          "docComment": "/**\n * Convert a standard CSS string to an integer number. This is commonly used in GL code.\n *\n * @param css - the css color hex string\n *\n * @param alpha - the alpha value to use [0-1]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css2rgbaint(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", alpha?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "alpha",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "css2rgbaint"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!css2rgbav:function(1)",
          "docComment": "/**\n * Convert a standard CSS string to vector of [r, g, b, a] values scaled from 0-1. This is typically used in WebGl.\n *\n * @param css - the css color hex string\n *\n * @param alpha - optional alpha override from 0-1. Not all CSS strings include alpha, so you can provide it if needed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function css2rgbav(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", alpha?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "[number, number, number, number]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "alpha",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "css2rgbav"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!darken:function(1)",
          "docComment": "/**\n * Darken a standard CSS color\n *\n * @param css - the css color hex string\n *\n * @param value - the value to darken by\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function darken(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", value?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "darken"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@thematic/color!defaultParams:var",
          "docComment": "/**\n * Default set of params useful for initializing new themes with our \"standard look\".\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultParams: "
            },
            {
              "kind": "Content",
              "text": "{\n    accentHue: number;\n    accentSaturation: number;\n    accentLightness: number;\n    scaleSaturation: number;\n    scaleLightness: number;\n    greyHue: number;\n    greySaturation: number;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "defaultParams",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!getNamedSchemeColor:function(1)",
          "docComment": "/**\n * Extracts a thematic Color using its scheme \"path\".\n *\n * @param scheme - the color scheme\n *\n * @param path - the scheme path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNamedSchemeColor(scheme: "
            },
            {
              "kind": "Reference",
              "text": "Scheme",
              "canonicalReference": "@thematic/color!Scheme:interface"
            },
            {
              "kind": "Content",
              "text": ", path?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "@thematic/color!Color:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "scheme",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "getNamedSchemeColor"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!getScheme:function(1)",
          "docComment": "/**\n * Takes a set of core params and generates all of the scale computes required for a Schema, using HSLuv color space for even perceptual qualities.\n *\n * @param params - \n *\n * @param nominalItemCount - \n *\n * @param sequentialItemCount - \n *\n * @param light - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getScheme(params: "
            },
            {
              "kind": "Reference",
              "text": "SchemeParams",
              "canonicalReference": "@thematic/color!SchemeParams:interface"
            },
            {
              "kind": "Content",
              "text": ", nominalItemCount: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", sequentialItemCount: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", light: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", tuning?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TuningParameters",
              "canonicalReference": "@thematic/color!TuningParameters:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Scheme",
              "canonicalReference": "@thematic/color!Scheme:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "nominalItemCount",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "sequentialItemCount",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "light",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            },
            {
              "parameterName": "tuning",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "isOptional": true
            }
          ],
          "name": "getScheme"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@thematic/color!Hsl:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Hsl "
            }
          ],
          "releaseTag": "Public",
          "name": "Hsl",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Hsl#h:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "h: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "h",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Hsl#l:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "l: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "l",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Hsl#s:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "s: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "s",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!hsluv2hex:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hsluv2hex(hsluv: "
            },
            {
              "kind": "Reference",
              "text": "HslVector",
              "canonicalReference": "@thematic/color!HslVector:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "hsluv",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "hsluv2hex"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!hsluv2hsl:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hsluv2hsl(hsluv: "
            },
            {
              "kind": "Reference",
              "text": "HslVector",
              "canonicalReference": "@thematic/color!HslVector:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HslVector",
              "canonicalReference": "@thematic/color!HslVector:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "hsluv",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "hsluv2hsl"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@thematic/color!HslVector:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HslVector = "
            },
            {
              "kind": "Content",
              "text": "[number, number, number]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "HslVector",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@thematic/color!Hsv:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Hsv "
            }
          ],
          "releaseTag": "Public",
          "name": "Hsv",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Hsv#h:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "h: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "h",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Hsv#s:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "s: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "s",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Hsv#v:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "v",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!isNominal:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNominal(name?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "isNominal"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!lch2hex:function(1)",
          "docComment": "/**\n * Convert a set of l, c, and h values to a standard CSS-comptible hex string\n *\n * @param l - the lightness value\n *\n * @param c - the chroma value\n *\n * @param h - the hue value\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function lch2hex(l: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", c: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", h: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "l",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "c",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "h",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "lch2hex"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!lighten:function(1)",
          "docComment": "/**\n * Lighten a standard CSS color\n *\n * @param css - the css color hex string\n *\n * @param value - the value to brighten by\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function lighten(css: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", value?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "css",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "lighten"
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!nearest:function(1)",
          "docComment": "/**\n * Finds the closest match from one color within a list.\n *\n * This just uses the Hue component from the HSLuv variant. The idea is that we just want the visually closest color.\n *\n * If you need something like Euclidean distance use chrome-js.distance directly.\n *\n * @param color - \n *\n * @param list - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function nearest(input: "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "@thematic/color!Color:class"
            },
            {
              "kind": "Content",
              "text": ", list: "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "@thematic/color!Color:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "@thematic/color!Color:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "input",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "list",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "nearest"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@thematic/color!Rgb:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Rgb "
            }
          ],
          "releaseTag": "Public",
          "name": "Rgb",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Rgb#b:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "b",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Rgb#g:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "g: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "g",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Rgb#r:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "r: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "r",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@thematic/color!Rgba:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Rgba extends "
            },
            {
              "kind": "Reference",
              "text": "Rgb",
              "canonicalReference": "@thematic/color!Rgb:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Rgba",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Rgba#a:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "a?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "a",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!rgba2hex:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function rgba2hex(rgba: "
            },
            {
              "kind": "Reference",
              "text": "Rgba",
              "canonicalReference": "@thematic/color!Rgba:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rgba",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "rgba2hex"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@thematic/color!RGBAV:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RGBAV = "
            },
            {
              "kind": "Content",
              "text": "[number, number, number, number]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RGBAV",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@thematic/color!rgbav2hex:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function rgbav2hex(rgbav: "
            },
            {
              "kind": "Reference",
              "text": "RGBAV",
              "canonicalReference": "@thematic/color!RGBAV:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rgbav",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "rgbav2hex"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@thematic/color!Scheme:interface",
          "docComment": "/**\n * Core color properties for a computed color scheme. Note the values are all strings - our color default representation uses hex codes.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Scheme "
            }
          ],
          "releaseTag": "Public",
          "name": "Scheme",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#accent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accent: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "accent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#background:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "background: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "background",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#dataPrimary:member",
              "docComment": "/**\n * Primary data color, derived from the accent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataPrimary: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataPrimary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#dataPrimaryBold:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataPrimaryBold: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataPrimaryBold",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#dataPrimaryMuted:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataPrimaryMuted: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataPrimaryMuted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#diverging:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "diverging: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "diverging",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#diverging2:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "diverging2: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "diverging2",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#faintAnnotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "faintAnnotation: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "faintAnnotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#foreground:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "foreground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "foreground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#greys:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "greys: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "greys",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#highContrastAnnotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "highContrastAnnotation: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "highContrastAnnotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#lowContrastAnnotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lowContrastAnnotation: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lowContrastAnnotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#lowMidContrastAnnotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lowMidContrastAnnotation: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lowMidContrastAnnotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#midContrastAnnotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "midContrastAnnotation: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "midContrastAnnotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#midHighContrastAnnotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "midHighContrastAnnotation: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "midHighContrastAnnotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#nominal:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nominal: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nominal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#nominalBold:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nominalBold: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nominalBold",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#nominalMuted:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nominalMuted: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nominalMuted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#offsetBackground:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offsetBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "offsetBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#rainbow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rainbow: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rainbow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#sequential:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sequential: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sequential",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#sequential2:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sequential2: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sequential2",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!Scheme#warning:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "warning: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "warning",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@thematic/color!SchemeParams:interface",
          "docComment": "/**\n * This is the core set of parameters for generating schemes using the ColorPicker\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SchemeParams "
            }
          ],
          "releaseTag": "Public",
          "name": "SchemeParams",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!SchemeParams#accentHue:member",
              "docComment": "/**\n * HSL hue component for the accent. Valid range is 0-360 (degrees).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accentHue: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "accentHue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!SchemeParams#accentLightness:member",
              "docComment": "/**\n * HSL lightness component for the accent. Valid range is 0-100.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accentLightness: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "accentLightness",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!SchemeParams#accentSaturation:member",
              "docComment": "/**\n * HSL saturation component for the accent. Valid range is 0-100.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accentSaturation: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "accentSaturation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!SchemeParams#greyHue:member",
              "docComment": "/**\n * Optional hue to mix some of warm or cool into grey scales.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "greyHue?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "greyHue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!SchemeParams#greySaturation:member",
              "docComment": "/**\n * Optional saturation to mix some of warm or cool into grey scales.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "greySaturation?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "greySaturation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!SchemeParams#scaleLightness:member",
              "docComment": "/**\n * Sets the default lightness for nominal scales. Muted and bold scales are a fixed lightness +-\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleLightness?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "scaleLightness",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thematic/color!SchemeParams#scaleSaturation:member",
              "docComment": "/**\n * Sets the default saturation for nominal scales. Muted and bold scales are a fixed saturation +-\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleSaturation?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "scaleSaturation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
